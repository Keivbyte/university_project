
.586P
.MODEL FLAT, stdcall
WM_DESTROY		equ	2
WM_CREATE		equ	1
WM_PAINT		equ	0Fh
CS_VREDRAW		equ	1h
CS_HREDRAW		equ	2h
CS_GLOBALCLASS		equ	4000h
WS_OVERLAPPEDWINDOW	equ	000CF0000H
stylecl			equ	CS_HREDRAW+CS_VREDRAW+CS_GLOBALCLASS
DX0			equ	300
DY0			equ	200
IDI_APPLICATION		equ	32512
IDC_CROSS		equ	32515
SW_SHOWNORMAL		equ	1
EXTERN	DeleteObject@4:NEAR
EXTERN	lstrlenA@4:NEAR
EXTERN	CreateWindowExA@48:NEAR
EXTERN	DefWindowProcA@16:NEAR
EXTERN	DispatchMessageA@4:NEAR
EXTERN	ExitProcess@4:NEAR
EXTERN  GetMessageA@16:NEAR 
;EXTERN	GetMessage@16:NEAR
EXTERN	GetModuleHandleA@4:NEAR
EXTERN	LoadCursorA@8:NEAR
EXTERN	LoadIconA@8:NEAR
EXTERN	PostQuitMessage@4:NEAR
EXTERN	RegisterClassA@4:NEAR
EXTERN	ShowWindow@8:NEAR
EXTERN	TranslateMessage@4:NEAR
EXTERN	UpdateWindow@4:NEAR
EXTERN	BeginPaint@8:NEAR
EXTERN	EndPaint@8:NEAR
EXTERN	TextOutA@20:NEAR
EXTERN	CreateSolidBrush@4:NEAR
EXTERN	SetBkColor@8:NEAR
EXTERN	SetTextColor@8:NEAR
EXTERN	GetTextExtentPoint32A@16:NEAR
EXTERN	GetWindowRect@8:NEAR
MSGSTRUCT STRUC
	MSHWND		DD ?
	MSMESSAGE	DD ?
	MSWPARAM	DD ?
	MSLPARAM	DD ?
	MSTIME		DD ?
	MSPT		DD ?
MSGSTRUCT ENDS

WNDCLASS STRUC
	CLSSTYLE		DD ?
	CLSLPFNWNDPROC	DD ?
	CLSCBCLSEXTRA	DD ?
	CLSCBWNDEXTRA	DD ?
	CLSHINSTANCE	DD ?
	CLSHICON	DD ?
	CLSHCURSOR	DD ?
	CLSHBACKGROUND	DD ?
	MENNAME		DD ?
	CLSNAME		DD ?
WNDCLASS ENDS


PAINTSTR STRUC
	hdc	DWORD 0
	fErase	DWORD 0
	left	DWORD 0
	top	DWORD 0
	right	DWORD 0
	bottom	DWORD 0
	fRes	DWORD 0
	fIncUp	DWORD 0
	Reserv	DB 32 dup(0)
PAINTSTR ENDS
SIZET STRUC
	X1	DWORD ?
	Y1	DWORD ?
SIZET ENDS
RECT STRUC
	L	DWORD ?
	T	DWORD ?
	R	DWORD ?
	B	DWORD ?
RECT ENDS

includelib C:\masm32\lib\user32.lib
includelib C:\masm32\lib\kernel32.lib
includelib C:\masm32\lib\gdi32.lib

_DATA SEGMENT
		NEWHWND		DD 0
		MSG		MSGSTRUCT	<?>
		WC		WNDCLASS	<?>
		PNT		PAINTSTR	<?>
		SZT		SIZET		<?>
		RCT		RECT		<?>
		HINST		DD 0
		TITLENAME	DB 'text in window', 0
		NAM		DB 'CLASS32', 0
		XT		DWORD ?
		YT		DWORD ?
		TEXT		DB 'Text in middle of window', 0  
		CONT		DWORD ?
		RGBW		DD 0
		RGBT		DD 255
_DATA ENDS
_TEXT SEGMENT
START:
		PUSH 255
		PUSH 255
		PUSH 0
		CALL SETRGB
		MOV RGBW, EAX
		PUSH 0
		PUSH 0
		PUSH 0
		CALL SETRGB
		MOV RGBT, EAX
		PUSH 0  
		CALL GetModuleHandleA@4
		MOV HINST, EAX
REG_CLASS:
		MOV WC.CLSSTYLE, stylecl
		MOV WC.CLSLPFNWNDPROC, OFFSET WNDPROC
		MOV WC.CLSCBCLSEXTRA, 0
		MOV WC.CLSCBWNDEXTRA, 0
		MOV EAX, HINST
		MOV WC.CLSHINSTANCE, EAX
		PUSH IDI_APPLICATION
		PUSH 0
		CALL LoadIconA@8
		MOV WC.CLSHICON, EAX
		PUSH IDC_CROSS
		PUSH 0
		CALL LoadCursorA@8
		MOV WC.CLSHCURSOR, EAX
		PUSH RGBW
		CALL CreateSolidBrush@4
		MOV WC.CLSHBACKGROUND, EAX  
		MOV DWORD PTR WC.MENNAME, 0
		MOV DWORD PTR WC.CLSNAME, OFFSET NAM
		PUSH OFFSET WC
		CALL RegisterClassA@4
		PUSH EAX
		CALL DeleteObject@4
		PUSH 0
		PUSH [HINST]
		PUSH 0
		PUSH 0
		PUSH DY0
		PUSH DX0
		PUSH 100
		PUSH 100
		PUSH WS_OVERLAPPEDWINDOW
		PUSH OFFSET TITLENAME
		PUSH OFFSET NAM
		PUSH 0
		CALL CreateWindowExA@48
		CMP EAX, 0
		JZ _ERR
		MOV [NEWHWND], EAX
		PUSH SW_SHOWNORMAL
		PUSH NEWHWND
		CALL ShowWindow@8
		PUSH NEWHWND
		CALL UpdateWindow@4
MSG_LOOP:
	PUSH 0
	PUSH 0
	PUSH 0
	PUSH OFFSET MSG
	CALL GetMessageA@16
	CMP EAX, 0
	JE END_LOOP
	PUSH OFFSET MSG
	CALL TranslateMessage@4
	PUSH OFFSET MSG
	CALL DispatchMessageA@4
	JMP MSG_LOOP
END_LOOP:
	PUSH MSG.MSWPARAM
	CALL ExitProcess@4
_ERR:
	JMP END_LOOP
WNDPROC PROC
	PUSH EBP
	MOV EBP, ESP
	PUSH EBX
	PUSH ESI
	PUSH EDI
	CMP DWORD PTR [EBP+0CH], WM_DESTROY
	JE WMDESTROY
	CMP DWORD PTR [EBP+0CH], WM_CREATE
	JE WMCREATE
	CMP DWORD PTR [EBP+0CH], WM_PAINT
	JE WMPAINT
	JMP DEFWNDPROC
WMPAINT:
	PUSH OFFSET PNT
	PUSH DWORD PTR [EBP+08H]
	CALL BeginPaint@8
	MOV CONT, EAX
	PUSH RGBW
	PUSH EAX
	CALL SetBkColor@8
	PUSH RGBT
	PUSH CONT
	CALL SetTextColor@8
	PUSH OFFSET TEXT
	CALL lstrlenA@4
	PUSH EAX
	PUSH OFFSET SZT
	PUSH EAX
	PUSH OFFSET TEXT
	PUSH CONT
	CALL GetTextExtentPoint32A@16
	PUSH OFFSET RCT
	PUSH DWORD PTR [EBP+8]
	CALL GetWindowRect@8
	MOV EAX, RCT.R
	SUB EAX, RCT.L
	SUB EAX, SZT.X1
	SHR EAX, 1
	MOV XT, EAX
	MOV EAX, RCT.B
	SUB EAX, RCT.T
	SHR EAX, 1
	SUB EAX, 25
	MOV YT, EAX
	PUSH OFFSET TEXT
	PUSH YT
	PUSH XT
	PUSH CONT
	CALL TextOutA@20
	PUSH OFFSET PNT
	PUSH DWORD PTR [EBP+08H]
	CALL EndPaint@8
	MOV EAX, 0
	JMP FINISH
WMCREATE:
	MOV EAX, 0
	JMP FINISH
DEFWNDPROC:
	PUSH DWORD PTR [EBP+14H]
	PUSH DWORD PTR [EBP+10H]
	PUSH DWORD PTR [EBP+0CH]
	PUSH DWORD PTR [EBP+08H]
	CALL DefWindowProcA@16
	JMP FINISH
WMDESTROY:
	PUSH 0
	CALL PostQuitMessage@4
	MOV EAX, 0
FINISH:
	POP EDI
	POP ESI
	POP EBX
	POP EBP
	RET 16
WNDPROC ENDP
SETRGB PROC
	PUSH EBP
	MOV EBP, ESP
	XOR EAX, EAX
	MOV AL, BYTE PTR [EBP+16]
	SHL EAX, 16
	MOV AH, BYTE PTR [EBP+12]
	MOV AL, BYTE PTR [EBP+8]
	MOV ESP, EBP
	POP EBP
	RET 12
SETRGB ENDP
_TEXT ENDS
END START