.586
.MODEL FLAT, stdcall
include prg21.inc

includelib d:\masm32\lib\user32.lib
includelib d:\masm32\lib\kernel32.lib

_DATA SEGMENT
	NEWHWND DD 0
	MSG MSGSTRUCT <?>
	WC WNDCLASS <?>
	HINST DD 0
	TITLENAME DB 'Example - end button', 0
	CLASSNAME DB 'CLASS32', 0
	CPBUT DB 'EXIT', 0
	CLSBUTN DB 'BUTTON', 0
	HWNDBTN DWORD 0
	CAP DB 'message', 0
	MES DB 'end of work of program', 0
_DATA ENDS
_TEXT SEGMENT
START:
	PUSH 0
	CALL GetModuleHandleA@4
	MOV HINST, EAX
REG_CLASS:
	MOV WC.CLSSTYLE, STYLE
	MOV WC.CLWNDPROC, OFFSET WINDPROC
	MOV WC.CLSCBCLSEX, 0
	MOV WC.CLSCBWNDEX, 0
	MOV EAX, HINST
	MOV WC.CLSHINST, EAX
	PUSH IDI_APPLICATION
	PUSH 0
	CALL LoadIconA@8
	MOV WC.CLSHICON, EAX
	PUSH IDC_ARROW
	PUSH 0
	CALL LoadCursorA@8
	MOV WC.CLSHCURSOR, EAX
	MOV WC.CLBKGROUND, 17
	MOV DWORD PTR WC.CLMENUNAME, 0 ;wat
	MOV DWORD PTR WC.CLNAME, OFFSET CLASSNAME
	PUSH OFFSET WC
	CALL RegisterClassA@4
	PUSH 0
	PUSH HINST
	PUSH 0
	PUSH 0
	PUSH 400
	PUSH 400
	PUSH 100
	PUSH 100
	PUSH WS_OVERLAPPEDWINDOW
	PUSH OFFSET TITLENAME
	PUSH OFFSET CLASSNAME
	PUSH 0
	CALL CreateWindowExA@48
	CMP EAX, 0
	JZ _ERR
	MOV NEWHWND, EAX
	PUSH SW_SHOWNORMAL
	PUSH NEWHWND
	CALL ShowWindow@8
	PUSH NEWHWND
	CALL UpdateWindow@4
MSG_LOOP:
	PUSH 0
	PUSH 0
	PUSH 0
	PUSH OFFSET MSG
	CALL GetMessageA@16
	CMP EAX, 0
	JE END_LOOP
	PUSH OFFSET MSG
	CALL TranslateMessage@4
	PUSH OFFSET MSG
	CALL DispatchMessageA@4
	JMP MSG_LOOP
END_LOOP:
	PUSH MSG.MSWPARAM
	CALL ExitProcess@4
_ERR:
	JMP END_LOOP
WINDPROC PROC
	PUSH EBP
	MOV EBP,ESP
	PUSH EBX
	PUSH ESI
	PUSH EDI
	CMP DWORD PTR [EBP+0CH], WM_DESTROY
	JE WMDESTROY
	CMP DWORD PTR [EBP+0CH], WM_CREATE
	JE WMCREATE
	CMP DWORD PTR[EBP+0CH], WM_COMMAND
	JE WMCOMMAND
	JMP DEFWNDPROC
WMCOMMAND:
	MOV EAX, HWNDBTN
	CMP DWORD PTR [EBX+14H], EAX
	JE WMDESTROY
	MOV EAX, 0
	JMP FINISH
WMCREATE:
	PUSH 0
	PUSH HINST
	PUSH 0
	PUSH DWORD PTR [EBP+08H]
	PUSH 20
	PUSH 60
	PUSH 10
	PUSH 10
	PUSH STYLBTN
	PUSH OFFSET CPBUT
	PUSH OFFSET CLSBUTN
	PUSH 0
	CALL CreateWindowExA@48
	MOV HWNDBTN, EAX
	MOV EAX, 0
	JMP FINISH
DEFWNDPROC:
	PUSH DWORD PTR [EBP+14H]
	PUSH DWORD PTR [EBP+10H]
	PUSH DWORD PTR [EBP+0CH]
	PUSH DWORD PTR [EBP+08H]
	CALL DefWindowProcA@16
	JMP FINISH
WMDESTROY:
	PUSH 0
	PUSH OFFSET CAP
	PUSH OFFSET MES
	PUSH DWORD PTR [EBP+08H]
	CALL MessageBoxA@16
	PUSH 0
	CALL PostQuitMessage@4
	MOV EAX,0
FINISH:
	POP EDI
	POP ESI
	POP EBX
	POP EBP
	RET 16
	WINDPROC ENDP
	_TEXT ENDS
END START